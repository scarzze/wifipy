version: '3.8'

services:
  # Redis for session storage and caching
  redis:
    image: redis:7-alpine
    container_name: captive-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: captive-backend
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - PORT=4000
      - REDIS_URL=redis://redis:6379
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - redis
    restart: unless-stopped
    command: npm run dev

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: captive-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_BASE=http://localhost:4000/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped
    command: npm run dev

  # Nginx reverse proxy (optional, for production)
  nginx:
    image: nginx:alpine
    container_name: captive-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: captive-network